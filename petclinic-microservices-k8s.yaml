---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-pvc
spec:
  storageClassName: nfs-client
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: Service
metadata:
  name: petclinic-db
spec:
  ports:
    - port: 3306
      targetPort: 3306
  selector:
    app: petclinic-db
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: petclinic-db
spec:
  replicas: 1
  selector:
    matchLabels:
      app: petclinic-db
  template:
    metadata:
      labels:
        app: petclinic-db
    spec:
      containers:
        - name: petclinic-db
          image: mariadb
          env:
            - name: MYSQL_ROOT_PASSWORD
              value: petclinic
            - name: MYSQL_DATABASE
              value: petclinic
          ports:
            - containerPort: 3306
          volumeMounts:
            - mountPath: /var/lib/mysql
              name: mysql-storage
      volumes:
        - name: mysql-storage
          persistentVolumeClaim:
            claimName: mysql-pvc
---
apiVersion: v1
kind: Service
metadata:
  name: config-server
spec:
  ports:
    - port: 8888
      targetPort: 8888
  selector:
    app: config-server
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: config-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: config-server
  template:
    metadata:
      labels:
        app: config-server
    spec:
      containers:
        - name: config-server
          image: nexus.advancia.com:8081/docker-prive/config-server
          ports:
            - containerPort: 8888
          resources:
            limits:
              memory: "512Mi"
          livenessProbe:
            httpGet:
              path: /
              port: 8888
            initialDelaySeconds: 10
            periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: discovery-server
spec:
  ports:
    - port: 8761
      targetPort: 8761
  selector:
    app: discovery-server
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: discovery-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: discovery-server
  template:
    metadata:
      labels:
        app: discovery-server
    spec:
      containers:
        - name: discovery-server
          image: nexus.advancia.com:8081/docker-prive/discovery-server
          ports:
            - containerPort: 8761
          resources:
            limits:
              memory: "512Mi"
          livenessProbe:
            httpGet:
              path: /
              port: 8761
            initialDelaySeconds: 15
            periodSeconds: 5
---
apiVersion: v1
kind: Service
metadata:
  name: customers-service
spec:
  ports:
    - port: 8081
      targetPort: 8081
  selector:
    app: customers-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: customers-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: customers-service
  template:
    metadata:
      labels:
        app: customers-service
    spec:
      containers:
        - name: customers-service
          image: nexus.advancia.com:8081/docker-prive/customers-service
          ports:
            - containerPort: 8081
          resources:
            limits:
              memory: "512Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: visits-service
spec:
  ports:
    - port: 8082
      targetPort: 8082
  selector:
    app: visits-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: visits-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: visits-service
  template:
    metadata:
      labels:
        app: visits-service
    spec:
      containers:
        - name: visits-service
          image: nexus.advancia.com:8081/docker-prive/visits-service
          ports:
            - containerPort: 8082
          resources:
            limits:
              memory: "512Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: vets-service
spec:
  ports:
    - port: 8083
      targetPort: 8083
  selector:
    app: vets-service
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: vets-service
spec:
  replicas: 1
  selector:
    matchLabels:
      app: vets-service
  template:
    metadata:
      labels:
        app: vets-service
    spec:
      containers:
        - name: vets-service
          image: nexus.advancia.com:8081/docker-prive/vets-service
          ports:
            - containerPort: 8083
          resources:
            limits:
              memory: "512Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: api-gateway
spec:
  type: NodePort
  ports:
    - port: 8080
      targetPort: 8080
      nodePort: 30080
  selector:
    app: api-gateway
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-gateway
  template:
    metadata:
      labels:
        app: api-gateway
    spec:
      containers:
        - name: api-gateway
          image: nexus.advancia.com:8081/docker-prive/api-gateway
          ports:
            - containerPort: 8080
          resources:
            limits:
              memory: "512Mi"
---
apiVersion: v1
kind: Service
metadata:
  name: prometheus
spec:
  ports:
    - port: 9090
      targetPort: 9090
  selector:
    app: prometheus
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
        - name: prometheus
          image: prom/prometheus:latest
          args:
            - "--config.file=/etc/prometheus/prometheus.yml"
          ports:
            - containerPort: 9090
          volumeMounts:
            - mountPath: /etc/prometheus/prometheus.yml
              name: prometheus-config
              subPath: prometheus.yml
      volumes:
        - name: prometheus-config
          configMap:
            name: prometheus-config
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
    scrape_configs:
      - job_name: "prometheus"
        static_configs:
          - targets: ["localhost:9090"]
---
apiVersion: v1
kind: Service
metadata:
  name: grafana
spec:
  ports:
    - port: 3000
      targetPort: 3000
  selector:
    app: grafana
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
        - name: grafana
          image: grafana/grafana:latest
          ports:
            - containerPort: 3000
---
apiVersion: v1
kind: Service
metadata:
  name: cadvisor
spec:
  ports:
    - port: 8080
      targetPort: 8080
  selector:
    app: cadvisor
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: cadvisor
spec:
  replicas: 1
  selector:
    matchLabels:
      app: cadvisor
  template:
    metadata:
      labels:
        app: cadvisor
    spec:
      containers:
        - name: cadvisor
          image: gcr.io/cadvisor/cadvisor
          ports:
            - containerPort: 8080
          volumeMounts:
            - name: rootfs
              mountPath: /rootfs
              readOnly: true
            - name: run
              mountPath: /var/run
            - name: sys
              mountPath: /sys
              readOnly: true
            - name: docker
              mountPath: /var/lib/docker
              readOnly: true
      volumes:
        - name: rootfs
          hostPath:
            path: /
        - name: run
          hostPath:
            path: /var/run
        - name: sys
          hostPath:
            path: /sys
        - name: docker
          hostPath:
            path: /var/lib/docker
---
apiVersion: v1
kind: Service
metadata:
  name: redis
spec:
  ports:
    - port: 6379
      targetPort: 6379
  selector:
    app: redis
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
        - name: redis
          image: redis:latest
          ports:
            - containerPort: 6379

